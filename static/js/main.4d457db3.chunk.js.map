{"version":3,"sources":["components/EditableTextField.js","components/VideoPlayer.js","components/Toolbar.js","components/PlayList.js","components/App.js","components/helpers/validUrl.js","serviceWorker.js","index.js"],"names":["EditableTextField","uniqueKey","name","value","updateValueCallback","useState","editMode","setEditMode","inputId","updateValue","useEffect","document","getElementById","focus","inputWidth","text","width","div","createElement","innerText","style","visibility","display","position","overflow","body","append","clientWidth","remove","getTextWidth","getInputWidth","TextField","key","defaultValue","title","onBlur","evt","target","onClick","onKeyPress","charCode","disabled","fullWidth","InputProps","startAdornment","InputAdornment","IconButton","id","VideoPlayer","React","memo","forwardRef","ref","currentVideoUrl","options","controls","source","type","sources","src","size","VideoContainer","previousVideoCallback","nextVideoCallback","plyrRef","useRef","loop","setLoop","autoplayNext","setAutoplayNext","current","plyr","autoPlayCallback","play","player","on","off","className","e","Toolbar","toggle","setSidebar","showSideBar","href","fontSize","data-tip","effect","place","rel","PlayList","videos","currentVideo","setVideoByIndex","setVideos","length","map","video","index","videoName","url","newList","filter","item","console","log","localStorage","setItem","JSON","stringify","deleteItem","serializeVideos","join","TextImporter","addVideos","showImporter","error","setError","onSubmit","preventDefault","data","forEach","l","line","trim","i","indexOf","slice","test","push","deserializeData","playlisturls","split","required","placeholder","App","darkMode","useDarkMode","lData","getItem","videosData","parse","initializeVideoData","setCurrentVideo","undefined","currentVideoIndex","setCurrentVideoIndex","showImporterMode","setShowImporterMode","showClearPlaylistDialog","setShowClearPlaylistDialog","updateVideos","updatedVideos","closeClearPlaylistDialog","blob","Blob","element","URL","createObjectURL","download","click","downloadPlaylist","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","removeItem","urls","newVideos","concat","newIndex","curIndex","newName","updatedCurVideo","curVideo","editVideoName","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d457db3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\nimport Edit from \"@material-ui/icons/Edit\";\n\nconst ENTER_CHAR_CODE = 13;\n\nfunction EditableTextField({uniqueKey, name, value, updateValueCallback}) {\n\tconst [editMode, setEditMode] = useState(false);\n\tconst inputId = `${name}-input`;\n\n\tconst handleBlur = (evt) => {\n\t\tupdateValue(evt.target.value);\n\t};\n\n\tconst handleClick = (evt) => {\n\t\tsetEditMode(() => true);\n\t};\n\n\tconst handleKeyPress = (evt) => {\n\t\tif (evt.charCode === ENTER_CHAR_CODE) {\n\t\t\tupdateValue(evt.target.value);\n\t\t}\n\t}\n\n\tconst updateValue = (value) => {\n\t\tsetEditMode(() => false);\n\t\tupdateValueCallback(value);\n\t}\n\n\tuseEffect(() => {\n\t\tif (editMode) {\n\t\t\tdocument.getElementById(inputId).focus();\n\t\t}\n\t}, [editMode]);\n\n\tconst getTextWidth = (text) => {\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerText = text;\n\t\tdiv.style.width = 'auto';\n\t\tdiv.style.visibility = 'hidden';\n\t\tdiv.style.display = 'inline-block';\n\t\tdiv.style.position = 'fixed';\n\t\tdiv.style.overflow = 'auto';\n\t\tdocument.body.append(div);\n\t\tlet width = div.clientWidth;\n\t\tdiv.remove();\n\t\treturn width;\n\t}\n\n\tconst getInputWidth = (text) => {\n\t\tlet width = getTextWidth(text) + 60;\n\t\treturn width > 1280 ? 1280 : width;\n\t}\n\n\tconst inputWidth = getInputWidth(value);\n\n\treturn (\n\t\t<div style={{width: `${inputWidth}px`}}>\n\t\t<TextField\n\t\t\tkey={uniqueKey}\n\t\t\tname={name}\n\t\t\tdefaultValue={value}\n\t\t\ttitle={value}\n\t\t\tonBlur={handleBlur}\n\t\t\tonClick={handleClick}\n\t\t\tonKeyPress={handleKeyPress}\n\t\t\tdisabled={!editMode}\n\t\t\tfullWidth={true}\n\t\t\tInputProps={{\n\t\t\t\tstartAdornment: \n\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t<IconButton><Edit /></IconButton>\n\t\t\t\t\t</InputAdornment>\n\t\t\t\t, id: inputId\n\t\t\t}}\n\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default EditableTextField;\n\n","import React, { useState, useRef, useEffect } from 'react';\nimport Plyr from 'plyr-react';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\n\nconst VideoPlayer = React.memo(React.forwardRef(({ currentVideoUrl }, ref) => {\n\treturn (\n\t\t<Plyr\n\t\tref={ref}\n\t\toptions={{\n\t\t\tcontrols: [\n\t\t\t\t'play',\n\t\t\t\t'progress',\n\t\t\t\t'current-time',\n\t\t\t\t'duration',\n\t\t\t\t'mute',\n\t\t\t\t'volume',\n\t\t\t\t'settings',\n\t\t\t\t'download',\n\t\t\t\t'fullscreen',\n\t\t\t],\n\t\t}}\n\t\tsource={{\n\t\t\ttype: 'video',\n\t\t\t\tsources: [\n\t\t\t\t\t{\n\t\t\t\t\t\tsrc: currentVideoUrl ?? 'https://cdn.plyr.io/static/blank.mp4',\n\t\t\t\t\t\ttype: 'video/mp4',\n\t\t\t\t\t\tsize: 720\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t}}\n\t\t/>\n\t);\n}));\n\n// TODO use localstorage for settings\nconst getInitialPlyrSettings = () => {\n\tconst data = localStorage.getItem(\"plyr\");\n\tconst plyrData = JSON.parse(data);\n\tif (plyrData) {\n\t\treturn plyrData;\n\t}\n\treturn {};\n};\n\nexport default function VideoContainer({ currentVideoUrl, previousVideoCallback, nextVideoCallback }) {\n\tconst plyrRef = useRef();\n\t// can't use autoplay option because we lose the \"ended\" event\n\t// instead we'll programatically trigger \"play\" on loading next video\n\tconst [loop, setLoop] = useState(false);\n\tconst [autoplayNext, setAutoplayNext] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (plyrRef?.current?.plyr) {\n\t\t\tplyrRef.current.plyr.loop = loop;\n\t\t}\n\t}, [loop]);\n\n\tconst autoPlayCallback = () => {\n\t\tif (plyrRef?.current?.plyr) {\n\t\t\tplyrRef.current.plyr.play();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tlet player = plyrRef?.current?.plyr;\n\t\tif (player) {\n\t\t\tif (autoplayNext) {\n\t\t\t\tplayer.on('ended', nextVideoCallback);\n\t\t\t\tplayer.on('ready', autoPlayCallback);\n\t\t\t} else {\n\t\t\t\tplayer.off('ready', autoPlayCallback);\n\t\t\t\tplayer.off('ended', nextVideoCallback);\n\t\t\t}\n\n\t\t\treturn () => {\n\t\t\t\tplayer.off('ready', autoPlayCallback);\n\t\t\t\tplayer.off('ended', nextVideoCallback);\n\t\t\t}\n\t\t}\n\t}, [autoplayNext]);\n\n\n\treturn (\n\t\t<div className=\"video-panel\">\n\t\t\t<div>\n\t\t\t\t<div className={currentVideoUrl ? \"video-container\" : \"video-container hidden\"}>\n\t\t\t\t\t<div className=\"additional-controls\">\n\t\t\t\t\t\t<div title=\"Previous Video\">\n\t\t\t\t\t\t\t<SkipPreviousIcon onClick={e => {previousVideoCallback()}}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={loop ? \"toggled\" : \"\"} title=\"Loop\">\n\t\t\t\t\t\t\t<LoopIcon onClick={e => {\n\t\t\t\t\t\t\t\tsetLoop(() => !loop);\n\t\t\t\t\t\t\t\tsetAutoplayNext(() => false);\n\t\t\t\t\t\t\t}}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={autoplayNext ? \"toggled\" : \"\"} title=\"Autoplay Next\">\n\t\t\t\t\t\t\t<PlayCircleOutlineIcon onClick={e => {\n\t\t\t\t\t\t\t\tsetAutoplayNext(() => !autoplayNext);\n\t\t\t\t\t\t\t\tsetLoop(() => false);\n\t\t\t\t\t\t\t}}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div title=\"Next Video\">\n\t\t\t\t\t\t\t<SkipNextIcon onClick={e => {nextVideoCallback()}}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<VideoPlayer\n\t\t\t\t\t\tcurrentVideoUrl={currentVideoUrl}\n\t\t\t\t\t\tref={plyrRef}\n\t\t\t\t\t/>\n\n\t\t\t\t</div>\n\t\t\t\t{!currentVideoUrl && (\n\t\t\t\t\t<div className=\"text-muted\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t1. Click on the\n\t\t\t\t\t\t\t<span className=\"c-icon\">\n\t\t\t\t\t\t\t\t<PlaylistAddIcon />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\tPlaylist icon\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>2. Add URLs separated by comma</p>\n\t\t\t\t\t\t<p>3. Save playlist and watch video</p>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport WBSunnyIcon from '@material-ui/icons/WbSunnyOutlined';\nimport CodeIcon from '@material-ui/icons/CodeOutlined';\nimport ReactTooltip from 'react-tooltip';\n\nexport default function Toolbar({ toggle, setSidebar, showSideBar }) {\n\treturn (\n\t\t<div className=\"toolbar\">\n\t\t\t<span href=\"#\" onClick={() => setSidebar(!showSideBar)}>\n\t\t\t\t{showSideBar ? <ArrowBackIosIcon fontSize=\"small\" /> : <ArrowForwardIosIcon fontSize=\"small\" />}\n\t\t\t</span>\n\t\t\t<div>\n\t\t\t\t<span data-tip=\"Change mode\" className=\"round-button-inverse\" onClick={toggle}>\n\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t<WBSunnyIcon fontSize=\"small\" />\n\t\t\t\t</span>\n\t\t\t\t<a\n\t\t\t\t\ttarget=\"_BLANK\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\thref=\"https://github.com/algebra123230/React-Video-Playlist\"\n\t\t\t\t\tdata-tip=\"View On Github\"\n\t\t\t\t\tclassName=\"round-button-inverse\"\n\t\t\t\t>\n\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t<CodeIcon fontSize=\"small\" /> Github\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\nimport VideIcon from '@material-ui/icons/PlayCircleOutline';\nimport ReactTooltip from 'react-tooltip';\n\nconst deleteItem = (id, videos, setVideos) => {\n\tconst newList = videos.filter((item, index) => index !== id);\n\tconsole.log(newList);\n\tlocalStorage.setItem('videos', JSON.stringify(newList));\n\tsetVideos(() => newList);\n};\n\nexport default function PlayList({ videos, currentVideo, setVideoByIndex, setVideos }) {\n\treturn (\n\t\t<>\n\t\t\t<h4 className=\"playlist-header\">Videos in Playlist {videos.length !== 0 ? <div className=\"playlist-count\">{videos.length}</div> : ''}</h4>\n\t\t\t<ul className=\"playlist-content\">\n\t\t\t\t{videos.length === 0 ? <span className=\"text-muted\">No videos in the Playlist</span> : ''}\n\t\t\t\t{videos.map((video, index) => {\n\t\t\t\t\tlet videoName = video.name ? video.name : `Video ${index + 1}`;\n\t\t\t\t\t// console.log(video.name);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={video.url} className={currentVideo === video ? 'active' : ''} title={videoName}>\n\t\t\t\t\t\t\t<div onClick={() => setVideoByIndex(index)} href=\"#\" className=\"d-flex pl-5 nav-video\">\n\t\t\t\t\t\t\t\t<div className=\"select-video\"><VideIcon fontSize=\"small\" /></div>\n\t\t\t\t\t\t\t\t<div className=\"video-title\">\n\t\t\t\t\t\t\t\t\t{videoName}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span className=\"delete-video\" data-tip=\"Remove Video\">\n\t\t\t\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t\t\t\t<DeleteIcon\n\t\t\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\t\t\tdeleteItem(index, videos, setVideos);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport ReactTooltip from 'react-tooltip';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ClearAllIcon from '@material-ui/icons/ClearAllOutlined';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport { validURL } from './helpers/validUrl';\nimport EditableTextField from './EditableTextField';\nimport VideoPlayer from './VideoPlayer';\nimport Toolbar from './Toolbar';\nimport PlayList from './PlayList';\n\nconst serializeVideos = videos => {\n\treturn videos.map(video => video.url + \" \" + video.name).join('\\n');\n};\n\nconst deserializeData = data => {\n\tlet videos = [];\n\tdata.forEach(l => {\n\t\tlet line = l.trim();\n\t\tlet i = line.indexOf(' ');\n\t\tlet url, name;\n\t\tif (i >= 0) {\n\t\t\turl = line.slice(0, i);\n\t\t\tname = line.slice(i+1);\n\t\t} else {\n\t\t\turl = line;\n\t\t}\n\t\tif (validURL(url)) {\n\t\t\tvideos.push({ url, name });\n\t\t}\n\t});\n\treturn videos;\n};\n\nfunction TextImporter({ addVideos, showImporter }) {\n\tconst [error, setError] = useState(false);\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (addVideos(deserializeData(e.target.playlisturls.value.split('\\n')))) {\n\t\t\t\t\tshowImporter();\n\t\t\t\t\tsetError();\n\t\t\t\t} else setError('URL List contains invalid URL');\n\t\t\t}}\n\t\t\tclassName=\"playlist-form\"\n\t\t>\n\t\t\t{error && <div className=\"alert-error\">{error}</div>}\n\t\t\t<textarea\n\t\t\t\tname=\"playlisturls\"\n\t\t\t\trequired\n\t\t\t\tplaceholder=\"Add videos to playlist (separated by newline). You can add custom name to videos (separated by space) Eg: VideoURL NAME.\"\n\t\t\t/>\n\t\t\t<button className=\"right button-primary\">Add to Playlist</button>\n\t\t</form>\n\t);\n}\n\nconst initializeVideoData = () => {\n\tconsole.log(\"initializing video data\");\n\tconst lData = localStorage.getItem('videos');\n\tconsole.log(lData);\n\tconst videosData = JSON.parse(lData);\n\tif (videosData) return videosData;\n\treturn [];\n};\n\nfunction App() {\n\tconst darkMode = useDarkMode(false);\n\tconst [videos, setVideos] = useState(() => initializeVideoData());\n\tconst [currentVideo, setCurrentVideo] = useState(videos[0]);\n\tconst [currentVideoIndex, setCurrentVideoIndex] = useState(videos.length > 0 ? 0 : undefined);\n\tconst [showImporterMode, setShowImporterMode] = useState(false);\n\tconst [showSideBar, setSidebar] = useState(true);\n\tconst [showClearPlaylistDialog, setShowClearPlaylistDialog] = useState(false);\n\tconst [downloadUrl, setDownloadUrl] = useState(\"\");\n\n\tconst updateVideos = updatedVideos => {\n\t\tlocalStorage.setItem('videos', JSON.stringify(updatedVideos));\n\t\tsetVideos(() => updatedVideos);\n\t}\n\n\tconst addVideos = newVideos => {\n\t\tupdateVideos(videos.concat(newVideos));\n\t\treturn true;\n\t};\n\n\tconst showImporter = () => {\n\t\tsetShowImporterMode(showImporterMode => !showImporterMode);\n\t};\n\n\tconst downloadPlaylist = () => {\n\t\tvar blob = new Blob([serializeVideos(videos)], { type: \"text/plain;charset=utf-8\" });\n\t\tconst element = document.createElement(\"a\");\n\t\telement.href = URL.createObjectURL(blob);\n\t\telement.download = \"playlist.txt\";\n\t\telement.click();\n    element.remove();\n\t};\n\n\tconst previousVideoCallback = () => {\n\t\tsetCurrentVideoIndex((curIndex) => {\n\t\t\tif (curIndex !== undefined) {\n\t\t\t\tlet newIndex = curIndex;\n\t\t\t\tnewIndex--;\n\t\t\t\tif (newIndex < 0) {\n\t\t\t\t\tnewIndex = videos.length - 1;\n\t\t\t\t}\n\t\t\t\treturn newIndex;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tconst nextVideoCallback = () => {\n\t\tsetCurrentVideoIndex((curIndex) => {\n\t\t\tif (curIndex !== undefined) {\n\t\t\t\tlet newIndex = curIndex;\n\t\t\t\tnewIndex++;\n\t\t\t\tif (newIndex >= videos.length) {\n\t\t\t\t\tnewIndex = 0;\n\t\t\t\t}\n\t\t\t\treturn newIndex;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tconst editVideoName = (newName) => {\n\t\tlet updatedCurVideo = {\n\t\t\tname: newName,\n\t\t\turl: currentVideo.url\n\t\t};\n\t\tlet updatedVideos = videos;\n\t\tupdatedVideos[currentVideoIndex] = updatedCurVideo;\n\t\tupdateVideos(updatedVideos);\n\t\tsetCurrentVideo((curVideo) => videos[currentVideoIndex]);\n\t}\n\n\tconst setVideoByIndex = (newIndex) => {\n\t\tconsole.log(\"setting video to index \" + newIndex);\n\t\tsetCurrentVideoIndex((curIndex) => newIndex);\n\t}\n\n\tuseEffect(() => {\n\t\tsetCurrentVideo(() =>\n\t\t\tcurrentVideoIndex !== undefined ? videos[currentVideoIndex] : undefined);\n\t}, [currentVideoIndex, videos]);\n\n\tuseEffect(() => {\n\t\tdocument.title = (currentVideo?.name ?? \"No Video\") + \" - React Video Player\";\n\t}, [currentVideo]);\n\n\tconst closeClearPlaylistDialog = () => {\n\t\tsetShowClearPlaylistDialog(false);\n\t}\n\n\tconst clearPlaylist = () => {\n\t\tsetVideos([]);\n\t\tlocalStorage.removeItem('videos');\n\t}\n\n\treturn (\n\t\t<div className=\"App d-flex\">\n\t\t\t{showSideBar && (\n\t\t\t\t<div className=\"sidebar\">\n\t\t\t\t\t<div className=\"sidebar-controls right\">\n\t\t\t\t\t\t<div data-tip=\"Add to Playlist\" className=\"round-button\" onClick={() => showImporter()}>\n\t\t\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t\t\t<PlaylistAddIcon />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div data-tip=\"Download Playlist\" className=\"round-button\" onClick={() => downloadPlaylist()}>\n\t\t\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t\t\t<GetAppIcon />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tdata-tip=\"Clear Playlist\"\n\t\t\t\t\t\t\tclassName=\"round-button\"\n\t\t\t\t\t\t\tonClick={() => {setShowClearPlaylistDialog(true)}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t\t\t<ClearAllIcon fontSize=\"small\" />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\topen={showClearPlaylistDialog}\n\t\t\t\t\t\t\tonClose={closeClearPlaylistDialog}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DialogTitle>{\"Clear Playlist?\"}</DialogTitle>\n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<DialogContentText>\n\t\t\t\t\t\t\t\t\tAre you sure you want to clear your playlist?\n\t\t\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button onClick={closeClearPlaylistDialog} color=\"default\">\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button onClick={() => {clearPlaylist(); closeClearPlaylistDialog();}} color=\"primary\">\n\t\t\t\t\t\t\t\t\tClear Playlist\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{showImporterMode && (\n\t\t\t\t\t\t<TextImporter\n\t\t\t\t\t\t\taddVideos={(urls) => addVideos(urls)}\n\t\t\t\t\t\t\tshowImporter={() => showImporter()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<div className=\"sidebar-playlist\">\n\t\t\t\t\t\t<PlayList\n\t\t\t\t\t\t\tvideos={videos}\n\t\t\t\t\t\t\tcurrentVideo={currentVideo}\n\t\t\t\t\t\t\tsetVideoByIndex={setVideoByIndex}\n\t\t\t\t\t\t\tsetVideos={setVideos}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<div className=\"video-panel-section\">\n\t\t\t\t<Toolbar toggle={darkMode.toggle} setSidebar={setSidebar} showSideBar={showSideBar} />\n\t\t\t\t<div className=\"grow d-flex center\">\n\t\t\t\t\t<div className=\"w-100\">\n\t\t\t\t\t\t<VideoPlayer\n\t\t\t\t\t\t\tcurrentVideoUrl={currentVideo?.url}\n\t\t\t\t\t\t\tpreviousVideoCallback={() => (previousVideoCallback())}\n\t\t\t\t\t\t\tnextVideoCallback={() => (nextVideoCallback())}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{currentVideo && (\n\t\t\t\t\t\t\t<div className=\"flex center video-name\">\n\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\tuniqueKey={currentVideo.url}\n\t\t\t\t\t\t\t\t\tname=\"video-name-textfield\"\n\t\t\t\t\t\t\t\t\tvalue={currentVideo.name ? currentVideo.name : `Video ${currentVideoIndex+1}`}\n\t\t\t\t\t\t\t\t\tupdateValueCallback={(newName) => editVideoName(newName)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","export function validURL(str) {\n\tconst regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n\tif (regexp.test(str)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}