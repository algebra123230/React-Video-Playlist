{"version":3,"sources":["components/VideoPlayer.js","components/Toolbar.js","components/PlayList.js","components/App.js","components/helpers/validUrl.js","serviceWorker.js","index.js"],"names":["VideoPlayer","currentVideo","className","source","type","sources","src","url","size","name","Toolbar","toggle","setSidebar","showSideBar","href","onClick","fontSize","data-tip","effect","place","target","rel","PlayList","videos","setCurrentVideo","setVideos","length","map","video","index","videoName","key","title","e","id","newList","filter","item","console","log","localStorage","setItem","JSON","stringify","deleteItem","App","darkMode","useDarkMode","useState","lData","getItem","videosData","parse","videosInitialData","showListMode","setShowListMode","error","setError","showList","removeItem","onSubmit","preventDefault","value","urlList","newUrlList","concat","storeVideos","data","urls","forEach","l","line","trim","i","indexOf","slice","test","push","deserializeData","split","handlePlaylist","playlisturls","required","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.617af29f.chunk.js","sourcesContent":["import React from 'react';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport Plyr from 'plyr-react';\n\nexport default function VideoPlayer({ currentVideo }) {\n\treturn (\n\t\t<div className=\"video-player\">\n\t\t\t{currentVideo ? (\n\t\t\t\t<div className=\"video-container\">\n\t\t\t\t\t<Plyr\n\t\t\t\t\t\tsource={{\n\t\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\t\tsources: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsrc: currentVideo.url,\n\t\t\t\t\t\t\t\t\ttype: 'video/mp4',\n\t\t\t\t\t\t\t\t\tsize: 720\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"flex center label-name\">{currentVideo.name}</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"text-muted\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t1. Click on the\n\t\t\t\t\t\t<span className=\"c-icon\">\n\t\t\t\t\t\t\t<PlaylistAddIcon />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\tPlaylist icon\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>2. Add URLs separated by comma</p>\n\t\t\t\t\t<p>3. Save playlist and watch video</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport WBSunnyIcon from '@material-ui/icons/WbSunnyOutlined';\nimport CodeIcon from '@material-ui/icons/CodeOutlined';\nimport ReactTooltip from 'react-tooltip';\n\nexport default function Toolbar({ toggle, setSidebar, showSideBar }) {\n\treturn (\n\t\t<div className=\"toolbar\">\n\t\t\t<span href=\"#\" onClick={() => setSidebar(!showSideBar)}>\n\t\t\t\t{showSideBar ? <ArrowBackIosIcon fontSize=\"small\" /> : <ArrowForwardIosIcon fontSize=\"small\" />}\n\t\t\t</span>\n\t\t\t<div>\n\t\t\t\t<span data-tip=\"Change mode\" className=\"round-button-inverse\" onClick={toggle}>\n\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t<WBSunnyIcon fontSize=\"small\" />\n\t\t\t\t</span>\n\t\t\t\t<a\n\t\t\t\t\ttarget=\"_BLANK\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\thref=\"https://github.com/PJijin/React-Video-Playlist\"\n\t\t\t\t\tdata-tip=\"View On Github\"\n\t\t\t\t\tclassName=\"round-button-inverse\"\n\t\t\t\t>\n\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t<CodeIcon fontSize=\"small\" /> Github\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\nimport VideIcon from '@material-ui/icons/PlayCircleOutline';\nimport ReactTooltip from 'react-tooltip';\n\nconst deleteItem = (id, videos, setVideos) => {\n\tconst newList = videos.filter((item, index) => index !== id);\n\tconsole.log(newList);\n\tlocalStorage.setItem('videos', JSON.stringify(newList));\n\tsetVideos(newList);\n};\n\nexport default function PlayList({ videos, currentVideo, setCurrentVideo, setVideos }) {\n\treturn (\n\t\t<>\n\t\t\t<h4>Videos in Playlist {videos.length !== 0 ? <div className=\"playlist-count\">{videos.length}</div> : ''}</h4>\n\t\t\t<ul>\n\t\t\t\t{videos.length === 0 ? <span className=\"text-muted\">No video's in the Playlist</span> : ''}\n\t\t\t\t{videos.map((video, index) => {\n          let videoName = video.name ? video.name : `Video ${index + 1}`;\n\t\t\t\t\t// console.log(video.name);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={video.url} className={currentVideo === video ? 'active' : ''} title={videoName}>\n\t\t\t\t\t\t\t<div onClick={() => setCurrentVideo(video)} href=\"#\" className=\"d-flex pl-5 nav-video\">\n\t\t\t\t\t\t\t\t<div className=\"select-video\"><VideIcon fontSize=\"small\" /></div>\n\t\t\t\t\t\t\t\t<div className=\"video-title\">\n\t\t\t\t\t\t\t\t\t{videoName}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"delete-video\" data-tip=\"Remove Video\">\n\t\t\t\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t\t\t\t<DeleteIcon\n\t\t\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\t\t\tdeleteItem(index, videos, setVideos);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t);\n}\n","import React, { useState } from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport ReactTooltip from 'react-tooltip';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport ClearAllIcon from '@material-ui/icons/ClearAllOutlined';\nimport { validURL } from './helpers/validUrl';\nimport VideoPlayer from './VideoPlayer';\nimport Toolbar from './Toolbar';\nimport PlayList from './PlayList';\n\nconst deserializeData = data => {\n\tlet urls = [];\n\tdata.forEach(l => {\n\t\tlet line = l.trim();\n\t\tlet i = line.indexOf(' ');\n\t\tlet url, name;\n\t\tif (i >= 0) {\n\t\t\turl = line.slice(0, i);\n\t\t\tname = line.slice(i+1);\n\t\t} else {\n\t\t\turl = line;\n\t\t}\n\t\tif (validURL(url)) {\n\t\t\turls.push({ url, name });\n\t\t}\n\t});\n\treturn urls;\n}\n\nconst handlePlaylist = (value, videos, setVideos) => {\n\tconst lines = value.split('\\n');\n\n\tconst storeVideos = urlList => {\n\t\tlet newUrlList = videos.concat(urlList);\n\t\tlocalStorage.setItem('videos', JSON.stringify(newUrlList));\n\t\tsetVideos(newUrlList);\n\t};\n\n\tlet urls = deserializeData(lines);\n\tstoreVideos(urls);\n\n\treturn true;\n};\n\nconst videosInitialData = () => {\n\tconst lData = localStorage.getItem('videos');\n\tconsole.log(lData);\n\tconst videosData = JSON.parse(lData);\n\tif (videosData) return videosData;\n\treturn [];\n};\n\nfunction App() {\n\tconst darkMode = useDarkMode(false);\n\tconst [videos, setVideos] = useState(videosInitialData());\n\tconst [currentVideo, setCurrentVideo] = useState(videos[0]);\n\tconst [showListMode, setShowListMode] = useState(false);\n\tconst [showSideBar, setSidebar] = useState(true);\n\tconst [error, setError] = useState(false);\n\n\tconst showList = () => {\n\t\tsetShowListMode(!showListMode);\n\t};\n\n\treturn (\n\t\t<div className=\"App d-flex\">\n\t\t\t{showSideBar && (\n\t\t\t\t<div className=\"sidebar\">\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<div data-tip=\"Add to Playlist\" className=\"round-button\" onClick={() => showList()}>\n\t\t\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t\t\t<PlaylistAddIcon />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tdata-tip=\"Clear Playlist\"\n\t\t\t\t\t\t\tclassName=\"round-button\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetVideos([]);\n\t\t\t\t\t\t\t\tlocalStorage.removeItem('videos');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t\t\t<ClearAllIcon fontSize=\"small\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{showListMode && (\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tonSubmit={e => {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tif (handlePlaylist(e.target.playlisturls.value, videos, setVideos)) {\n\t\t\t\t\t\t\t\t\tshowList();\n\t\t\t\t\t\t\t\t\tsetError();\n\t\t\t\t\t\t\t\t} else setError('URL List contains invalid URL');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName=\"playlist-form\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{error && <div className=\"alert-error\">{error}</div>}\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tname=\"playlisturls\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tplaceholder=\"Add videos to playlist (separated by newline). You can add custom name to videos (separated by space) Eg: VideoURL NAME.\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button className=\"right button-primary\">Save Playlist</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<PlayList\n\t\t\t\t\t\tvideos={videos}\n\t\t\t\t\t\tcurrentVideo={currentVideo}\n\t\t\t\t\t\tsetCurrentVideo={setCurrentVideo}\n\t\t\t\t\t\tsetVideos={setVideos}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<div className=\"video-player-section\">\n\t\t\t\t<Toolbar toggle={darkMode.toggle} setSidebar={setSidebar} showSideBar={showSideBar} />\n\t\t\t\t<div className=\"grow d-flex center\">\n\t\t\t\t\t<div className=\"w-100\">\n\t\t\t\t\t\t<VideoPlayer currentVideo={currentVideo} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","export function validURL(str) {\n\tconst regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n\tif (regexp.test(str)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}