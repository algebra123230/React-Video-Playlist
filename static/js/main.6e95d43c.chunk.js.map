{"version":3,"sources":["components/VideoPlayer.js","components/Toolbar.js","components/PlayList.js","components/App.js","components/helpers/validUrl.js","serviceWorker.js","index.js"],"names":["VideoPlayer","React","memo","forwardRef","ref","currentVideo","options","controls","source","type","sources","src","url","size","VideoContainer","previousVideoCallback","nextVideoCallback","plyrRef","useRef","useState","loop","setLoop","autoplayNext","setAutoplayNext","useEffect","current","plyr","autoPlayCallback","play","player","on","off","document","title","name","className","onClick","e","Toolbar","toggle","setSidebar","showSideBar","href","fontSize","data-tip","effect","place","target","rel","PlayList","videos","setVideoByIndex","setVideos","length","map","video","index","videoName","key","id","newList","filter","item","console","log","localStorage","setItem","JSON","stringify","deleteItem","serializeVideos","join","TextImporter","addVideos","showImporter","error","setError","onSubmit","preventDefault","data","forEach","l","line","trim","i","indexOf","slice","test","push","deserializeData","playlisturls","value","split","required","placeholder","App","darkMode","useDarkMode","lData","getItem","videosData","parse","initializeVideoData","setCurrentVideo","undefined","currentVideoIndex","setCurrentVideoIndex","showImporterMode","setShowImporterMode","showClearPlaylistDialog","setShowClearPlaylistDialog","closeClearPlaylistDialog","blob","Blob","element","createElement","URL","createObjectURL","download","click","downloadPlaylist","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","autoFocus","removeItem","urls","newVideos","updatedVideos","concat","newIndex","curIndex","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e95d43c.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Plyr from 'plyr-react';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\n\nconst VideoPlayer = React.memo(React.forwardRef(({ currentVideo }, ref) => {\n\treturn (\n\t\t<Plyr\n\t\tref={ref}\n\t\toptions={{\n\t\t\tcontrols: [\n\t\t\t\t'play',\n\t\t\t\t'progress',\n\t\t\t\t'current-time',\n\t\t\t\t'duration',\n\t\t\t\t'mute',\n\t\t\t\t'volume',\n\t\t\t\t'settings',\n\t\t\t\t'download',\n\t\t\t\t'fullscreen',\n\t\t\t],\n\t\t}}\n\t\tsource={{\n\t\t\ttype: 'video',\n\t\t\t\tsources: [\n\t\t\t\t\t{\n\t\t\t\t\t\tsrc: currentVideo?.url ?? 'https://cdn.plyr.io/static/blank.mp4',\n\t\t\t\t\t\ttype: 'video/mp4',\n\t\t\t\t\t\tsize: 720\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t}}\n\t\t/>\n\t);\n}));\n\n// TODO use localstorage for settings\nconst getInitialPlyrSettings = () => {\n\tconst data = localStorage.getItem(\"plyr\");\n\tconst plyrData = JSON.parse(data);\n\tif (plyrData) {\n\t\treturn plyrData;\n\t}\n\treturn {};\n};\n\nexport default function VideoContainer({ currentVideo, previousVideoCallback, nextVideoCallback }) {\n\tconst plyrRef = useRef();\n\t// can't use autoplay option because we lose the \"ended\" event\n\t// instead we'll programatically trigger \"play\" on loading next video\n\tconst [loop, setLoop] = useState(false);\n\tconst [autoplayNext, setAutoplayNext] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (plyrRef?.current?.plyr) {\n\t\t\tplyrRef.current.plyr.loop = loop;\n\t\t}\n\t}, [loop]);\n\n\tconst autoPlayCallback = () => {\n\t\tif (plyrRef?.current?.plyr) {\n\t\t\tplyrRef.current.plyr.play();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tlet player = plyrRef?.current?.plyr;\n\t\tif (player) {\n\t\t\tif (autoplayNext) {\n\t\t\t\tplayer.on('ended', nextVideoCallback);\n\t\t\t\tplayer.on('ready', autoPlayCallback);\n\t\t\t} else {\n\t\t\t\tplayer.off('ready', autoPlayCallback);\n\t\t\t\tplayer.off('ended', nextVideoCallback);\n\t\t\t}\n\n\t\t\treturn () => {\n\t\t\t\tplayer.off('ready', autoPlayCallback);\n\t\t\t\tplayer.off('ended', nextVideoCallback);\n\t\t\t}\n\t\t}\n\t}, [autoplayNext]);\n\n\tuseEffect(() => {\n\t\tdocument.title = (currentVideo?.name ?? \"No Video\") + \" - React Video Player\";\n\t}, [currentVideo]);\n\n\n\treturn (\n\t\t<div className=\"video-panel\">\n\t\t\t<div>\n\t\t\t\t<div className={currentVideo ? \"video-container\" : \"video-container hidden\"}>\n\t\t\t\t\t<div className=\"additional-controls\">\n\t\t\t\t\t\t<div title=\"Previous Video\">\n\t\t\t\t\t\t\t<SkipPreviousIcon onClick={e => {previousVideoCallback()}}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={loop ? \"toggled\" : \"\"} title=\"Loop\">\n\t\t\t\t\t\t\t<LoopIcon onClick={e => {\n\t\t\t\t\t\t\t\tsetLoop(() => !loop);\n\t\t\t\t\t\t\t\tsetAutoplayNext(() => false);\n\t\t\t\t\t\t\t}}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={autoplayNext ? \"toggled\" : \"\"} title=\"Autoplay Next\">\n\t\t\t\t\t\t\t<PlayCircleOutlineIcon onClick={e => {\n\t\t\t\t\t\t\t\tsetAutoplayNext(() => !autoplayNext);\n\t\t\t\t\t\t\t\tsetLoop(() => false);\n\t\t\t\t\t\t\t}}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div title=\"Next Video\">\n\t\t\t\t\t\t\t<SkipNextIcon onClick={e => {nextVideoCallback()}}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<VideoPlayer\n\t\t\t\t\t\tcurrentVideo={currentVideo}\n\t\t\t\t\t\tref={plyrRef}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{currentVideo && (\n\t\t\t\t\t\t<div className=\"flex center label-name\">{currentVideo.name}</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{!currentVideo && (\n\t\t\t\t\t<div className=\"text-muted\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t1. Click on the\n\t\t\t\t\t\t\t<span className=\"c-icon\">\n\t\t\t\t\t\t\t\t<PlaylistAddIcon />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\tPlaylist icon\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>2. Add URLs separated by comma</p>\n\t\t\t\t\t\t<p>3. Save playlist and watch video</p>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport WBSunnyIcon from '@material-ui/icons/WbSunnyOutlined';\nimport CodeIcon from '@material-ui/icons/CodeOutlined';\nimport ReactTooltip from 'react-tooltip';\n\nexport default function Toolbar({ toggle, setSidebar, showSideBar }) {\n\treturn (\n\t\t<div className=\"toolbar\">\n\t\t\t<span href=\"#\" onClick={() => setSidebar(!showSideBar)}>\n\t\t\t\t{showSideBar ? <ArrowBackIosIcon fontSize=\"small\" /> : <ArrowForwardIosIcon fontSize=\"small\" />}\n\t\t\t</span>\n\t\t\t<div>\n\t\t\t\t<span data-tip=\"Change mode\" className=\"round-button-inverse\" onClick={toggle}>\n\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t<WBSunnyIcon fontSize=\"small\" />\n\t\t\t\t</span>\n\t\t\t\t<a\n\t\t\t\t\ttarget=\"_BLANK\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\thref=\"https://github.com/algebra123230/React-Video-Playlist\"\n\t\t\t\t\tdata-tip=\"View On Github\"\n\t\t\t\t\tclassName=\"round-button-inverse\"\n\t\t\t\t>\n\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t<CodeIcon fontSize=\"small\" /> Github\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\nimport VideIcon from '@material-ui/icons/PlayCircleOutline';\nimport ReactTooltip from 'react-tooltip';\n\nconst deleteItem = (id, videos, setVideos) => {\n\tconst newList = videos.filter((item, index) => index !== id);\n\tconsole.log(newList);\n\tlocalStorage.setItem('videos', JSON.stringify(newList));\n\tsetVideos(() => newList);\n};\n\nexport default function PlayList({ videos, currentVideo, setVideoByIndex, setVideos }) {\n\treturn (\n\t\t<>\n\t\t\t<h4>Videos in Playlist {videos.length !== 0 ? <div className=\"playlist-count\">{videos.length}</div> : ''}</h4>\n\t\t\t<ul>\n\t\t\t\t{videos.length === 0 ? <span className=\"text-muted\">No videos in the Playlist</span> : ''}\n\t\t\t\t{videos.map((video, index) => {\n\t\t\t\t\tlet videoName = video.name ? video.name : `Video ${index + 1}`;\n\t\t\t\t\t// console.log(video.name);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={video.url} className={currentVideo === video ? 'active' : ''} title={videoName}>\n\t\t\t\t\t\t\t<div onClick={() => setVideoByIndex(index)} href=\"#\" className=\"d-flex pl-5 nav-video\">\n\t\t\t\t\t\t\t\t<div className=\"select-video\"><VideIcon fontSize=\"small\" /></div>\n\t\t\t\t\t\t\t\t<div className=\"video-title\">\n\t\t\t\t\t\t\t\t\t{videoName}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span className=\"delete-video\" data-tip=\"Remove Video\">\n\t\t\t\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t\t\t\t<DeleteIcon\n\t\t\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\t\t\tdeleteItem(index, videos, setVideos);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport ReactTooltip from 'react-tooltip';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport ClearAllIcon from '@material-ui/icons/ClearAllOutlined';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { validURL } from './helpers/validUrl';\nimport VideoPlayer from './VideoPlayer';\nimport Toolbar from './Toolbar';\nimport PlayList from './PlayList';\n\nconst serializeVideos = videos => {\n\treturn videos.map(video => video.url + \" \" + video.name).join('\\n');\n};\n\nconst deserializeData = data => {\n\tlet videos = [];\n\tdata.forEach(l => {\n\t\tlet line = l.trim();\n\t\tlet i = line.indexOf(' ');\n\t\tlet url, name;\n\t\tif (i >= 0) {\n\t\t\turl = line.slice(0, i);\n\t\t\tname = line.slice(i+1);\n\t\t} else {\n\t\t\turl = line;\n\t\t}\n\t\tif (validURL(url)) {\n\t\t\tvideos.push({ url, name });\n\t\t}\n\t});\n\treturn videos;\n};\n\nfunction TextImporter({ addVideos, showImporter }) {\n\tconst [error, setError] = useState(false);\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (addVideos(deserializeData(e.target.playlisturls.value.split('\\n')))) {\n\t\t\t\t\tshowImporter();\n\t\t\t\t\tsetError();\n\t\t\t\t} else setError('URL List contains invalid URL');\n\t\t\t}}\n\t\t\tclassName=\"playlist-form\"\n\t\t>\n\t\t\t{error && <div className=\"alert-error\">{error}</div>}\n\t\t\t<textarea\n\t\t\t\tname=\"playlisturls\"\n\t\t\t\trequired\n\t\t\t\tplaceholder=\"Add videos to playlist (separated by newline). You can add custom name to videos (separated by space) Eg: VideoURL NAME.\"\n\t\t\t/>\n\t\t\t<button className=\"right button-primary\">Add to Playlist</button>\n\t\t</form>\n\t);\n}\n\nconst initializeVideoData = () => {\n\tconsole.log(\"initializing video data\");\n\tconst lData = localStorage.getItem('videos');\n\tconsole.log(lData);\n\tconst videosData = JSON.parse(lData);\n\tif (videosData) return videosData;\n\treturn [];\n};\n\nfunction App() {\n\tconst darkMode = useDarkMode(false);\n\tconst [videos, setVideos] = useState(() => initializeVideoData());\n\tconst [currentVideo, setCurrentVideo] = useState(videos[0]);\n\tconst [currentVideoIndex, setCurrentVideoIndex] = useState(videos.length > 0 ? 0 : undefined);\n\tconst [showImporterMode, setShowImporterMode] = useState(false);\n\tconst [showSideBar, setSidebar] = useState(true);\n\tconst [showClearPlaylistDialog, setShowClearPlaylistDialog] = useState(false);\n\tconst [downloadUrl, setDownloadUrl] = useState(\"\");\n\n\tconst addVideos = newVideos => {\n\t\tlet updatedVideos = videos.concat(newVideos);\n\t\tlocalStorage.setItem('videos', JSON.stringify(updatedVideos));\n\t\tsetVideos(() => updatedVideos);\n\t\treturn true;\n\t};\n\n\tconst showImporter = () => {\n\t\tsetShowImporterMode(showImporterMode => !showImporterMode);\n\t};\n\n\tconst downloadPlaylist = () => {\n\t\tvar blob = new Blob([serializeVideos(videos)], { type: \"text/plain;charset=utf-8\" });\n\t\tconst element = document.createElement(\"a\");\n\t\telement.href = URL.createObjectURL(blob);\n\t\telement.download = \"playlist.txt\";\n\t\telement.click();\n\t};\n\n\tconst previousVideoCallback = () => {\n\t\tsetCurrentVideoIndex((curIndex) => {\n\t\t\tif (curIndex !== undefined) {\n\t\t\t\tlet newIndex = curIndex;\n\t\t\t\tnewIndex--;\n\t\t\t\tif (newIndex < 0) {\n\t\t\t\t\tnewIndex = videos.length - 1;\n\t\t\t\t}\n\t\t\t\treturn newIndex;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tconst nextVideoCallback = () => {\n\t\tsetCurrentVideoIndex((curIndex) => {\n\t\t\tif (curIndex !== undefined) {\n\t\t\t\tlet newIndex = curIndex;\n\t\t\t\tnewIndex++;\n\t\t\t\tif (newIndex >= videos.length) {\n\t\t\t\t\tnewIndex = 0;\n\t\t\t\t}\n\t\t\t\treturn newIndex;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tconst setVideoByIndex = (newIndex) => {\n\t\tconsole.log(\"setting video to index \" + newIndex);\n\t\tsetCurrentVideoIndex((curIndex) => newIndex);\n\t}\n\n\tuseEffect(() => {\n\t\tsetCurrentVideo(() =>\n\t\t\tcurrentVideoIndex !== undefined ? videos[currentVideoIndex] : undefined);\n\t}, [currentVideoIndex, videos]);\n\n\n\tconst closeClearPlaylistDialog = () => {\n\t\tsetShowClearPlaylistDialog(false);\n\t}\n\n\tconst clearPlaylist = () => {\n\t\tsetVideos([]);\n\t\tlocalStorage.removeItem('videos');\n\t}\n\n\treturn (\n\t\t<div className=\"App d-flex\">\n\t\t\t{showSideBar && (\n\t\t\t\t<div className=\"sidebar\">\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<div data-tip=\"Add to Playlist\" className=\"round-button\" onClick={() => showImporter()}>\n\t\t\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t\t\t<PlaylistAddIcon />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div data-tip=\"Download Playlist\" className=\"round-button\" onClick={() => downloadPlaylist()}>\n\t\t\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t\t\t<GetAppIcon />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tdata-tip=\"Clear Playlist\"\n\t\t\t\t\t\t\tclassName=\"round-button\"\n\t\t\t\t\t\t\tonClick={() => {setShowClearPlaylistDialog(true)}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ReactTooltip effect=\"solid\" place=\"right\" />\n\t\t\t\t\t\t\t<ClearAllIcon fontSize=\"small\" />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\topen={showClearPlaylistDialog}\n\t\t\t\t\t\t\tonClose={closeClearPlaylistDialog}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DialogTitle>{\"Clear Playlist?\"}</DialogTitle>\n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<DialogContentText>\n\t\t\t\t\t\t\t\t\tAre you sure you want to clear your playlist?\n\t\t\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button onClick={closeClearPlaylistDialog} color=\"default\" autoFocus>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button onClick={() => {clearPlaylist(); closeClearPlaylistDialog();}} color=\"primary\">\n\t\t\t\t\t\t\t\t\tClear Playlist\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Dialog>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t{showImporterMode && (\n\t\t\t\t\t\t<TextImporter\n\t\t\t\t\t\t\taddVideos={(urls) => addVideos(urls)}\n\t\t\t\t\t\t\tshowImporter={() => showImporter()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<PlayList\n\t\t\t\t\t\tvideos={videos}\n\t\t\t\t\t\tcurrentVideo={currentVideo}\n\t\t\t\t\t\tsetVideoByIndex={setVideoByIndex}\n\t\t\t\t\t\tsetVideos={setVideos}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<div className=\"video-panel-section\">\n\t\t\t\t<Toolbar toggle={darkMode.toggle} setSidebar={setSidebar} showSideBar={showSideBar} />\n\t\t\t\t<div className=\"grow d-flex center\">\n\t\t\t\t\t<div className=\"w-100\">\n\t\t\t\t\t\t<VideoPlayer\n\t\t\t\t\t\t\tcurrentVideo={currentVideo}\n\t\t\t\t\t\t\tpreviousVideoCallback={() => (previousVideoCallback())}\n\t\t\t\t\t\t\tnextVideoCallback={() => (nextVideoCallback())}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","export function validURL(str) {\n\tconst regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n\tif (regexp.test(str)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}